<?php

/**
 * Implementation of hook_menu().
 */
function at_rally_auth_perm() {
    return array('use SMS Blast', 'admin SMS Blast');
}

/**
 * Implementation of hook_menu().
 */
function smsblast_menu() {
  $items = array();
  $items['admin/smsframework/smsblast'] = array(
    'title' => 'SMS Blast',
    'description' => 'Send bulk SMS Blasts to a view containing nodes with a SMS number in a CCK field.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('smsblast_sendform'),
    'access arguments' => array('use SMS Blast'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/smsframework/smsblast/history'] = array(
    'title' => 'SMS Blast History',
    'description' => 'View log of past SMS blasts.',
    'page callback' => 'smsblast_history',
    'access arguments' => array('use SMS Blast'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/smsframework/smsblast/settings'] = array(
    'title' => 'SMS Blast Settings',
    'description' => 'SMS Blast configuration and defaults.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('smsblast_admin_settings'),
    'access arguments' => array('admin SMS Blast'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Module settings form. */
function smsblast_admin_settings() { 
  $all_views = views_get_all_views(); 
  $views = array();
  foreach ($all_views as $view) {
      $views[ $view->name ] = $view->name;
  }
  $cck_fields = array_keys(content_fields());

  $form = array();

  $form['smsblast_default_view'] = array(
    '#type' => 'select',
    '#title' => t('Default View'),
    '#default_value' => variable_get('smsblast_default_view', ''),
    '#description' => t('Default SMS Blast View'),
    '#options' => $views,
  );
  $form['smsblast_default_cckfield'] = array(
    '#type' => 'select',
    '#title' => t('Default View'),
    '#default_value' => variable_get('smsblast_default_cckfield', ''),
    '#description' => t('Default SMS Blast CCK Field'),
    '#options' => array_combine($cck_fields,$cck_fields),
  );

  return system_settings_form($form);
}

function smsblast_history() { 
  # XXX
  $output = '';
  $output .= "hey hey!";
  return $output;
}

/**
 * Display a list of installed modules with the option to reinstall them.
 */
function smsblast_sendform($form_state) {
  if (empty($form_state['values'])) {
    $all_views = views_get_all_views(); 
    $views = array();
    foreach ($all_views as $view) {
        $views[ $view->name ] = $view->name;
    }
    $cck_fields = array_keys(content_fields());
    $form['smsblast_view'] = array(
      '#type' => 'select',
      '#title' => t('Select a View'),
      '#default_value' => variable_get('smsblast_default_view', ''),
      '#description' => t('SMS Blast will go to all nodes in this View.'),
      '#options' => $views,
    ); 
    $form['smsblast_cckfield'] = array(
      '#type' => 'select',
      '#title' => t('Select a CCK field'),
      '#default_value' => variable_get('smsblast_default_cckfield', ''),
      '#description' => t('Pick the CCK field that contains the SMS number you want to send to.  CAUTION: this field should exist for all nodes in your View!'),
      '#options' => array_combine($cck_fields,$cck_fields),
    ); 
    $form['smsblast_message'] = array(
      '#type' => 'textfield',
      '#title' => t('SMS message'),
      '#default_value' => t('Put your message here'),
      '#description' => t('This message will be sent in the SMS Blast.'),
    ); 
    $form['submit'] = array(
      '#value' => t('Preview SMS Blast'),
      '#type' => 'submit',
    );
  } else { # confirmation page

    $form['submit'] = array(
      '#prefix' => t('<p>The following message will be SMS Blasted to %smsnumcount numbers:<br><b>%smsmsg</b><br>Warning - SMS spam is illegal.  Please ensure that your message complies with ', array('%smsnumcount' =>  $form_state['storage']['smsnumcount'], '%smsmsg' => $form_state['values']['smsblast_message'])).l(t('MMA Best Practices'), 'http://www.mmaglobal.com/bestpractices.pdf').'.</p><br>',
      '#value' => t('Send SMS Blast'),
      '#type' => 'submit',
    );
    $form['send_confirmed'] = array('#type' => 'hidden', '#value' => 'true');

    drupal_set_message(t('Please double-check your message text and then click the button below to send it.'), 'warning');
  }
  return $form;
}
 
###########
function smsblast_sendform_validate($form, &$form_state) {
}

/**
 * Process reinstall menu form submissions.
 */
function smsblast_sendform_submit($form, &$form_state) {
  if (!isset($form_state['values']['send_confirmed'])) { # submitted for preview/validation
    $view = views_get_view($form_state['values']['smsblast_view']);
    $view->execute();
    $cckfieldname = 'node_data_'.$form_state['values']['smsblast_cckfield'].'_'.$form_state['values']['smsblast_cckfield'].'_value';
    $cckerror = 0;
    foreach ($view->result as $thenode) { # validate CCK field is present in each node in the view
      if (!isset($thenode->$cckfieldname)) {
        $cckerror = 1;
        break;
      }
    }
    if ($cckerror) {
      drupal_set_message(t('Error - the CCK field you selected %smsfieldname is not present in the nodes in the view %smsview.', array( '%smsfieldname' => $form_state['values']['smsblast_cckfield'], '%smsview' => $form_state['values']['smsblast_view'])), 'error');
      unset($form_state['values']);
      return $form;
    }
    $form_state['rebuild'] = TRUE; // This is vital so the values are there

    $form_state['storage']['smsform_values'] = $form_state['values'];
    $form_state['storage']['smsnumcount'] = count($view->result);
    return $form;
  } else {   # submitted/confirmed for sending
    $cckfieldname = 'node_data_'.$form_state['storage']['smsform_values']['smsblast_cckfield'].'_'.$form_state['storage']['smsform_values']['smsblast_cckfield'].'_value';

    $themessage = $form_state['storage']['smsform_values']['smsblast_message'] ;
    $view = views_get_view($form_state['storage']['smsform_values']['smsblast_view']);
    $view->execute();
    
    watchdog('smsblast', 'Sending SMS Blast to %smsviewname: %smsmsg', array( '%smsviewname' =>  $view->name, '%smsmsg' => $themessage ));
    foreach ($view->result as $thenode) {

      if (!isset($thenode->$cckfieldname)) {
        watchdog('smsblast', 'Skipping SMS to %smsnum - missing SMS number field %cckfieldname', array( '%smsnum' => $thesmsnumber, '%cckfieldname' => $cckfieldname ));
        continue;
      }
      $thesmsnumber = $thenode->$cckfieldname;

      # validate and format the SMS number
      $thesmsnumber = smsblast_validate_phone($thesmsnumber);
      if (! $thesmsnumber) {
        watchdog('smsblast', 'Skipping SMS to %smsnum - bad SMS number in field %cckfieldname', array( '%smsnum' => $thesmsnumber, '%cckfieldname' => $cckfieldname ));
        continue;
      }

      # actually send the SMS
      if ( sms_send($thesmsnumber, $themessage)) {
        watchdog('smsblast', 'Sent SMS to %smsnum: %smsmsg', array( '%smsnum' => $thesmsnumber, '%smsmsg' => $themessage ));
      } else {
        watchdog('smsblast', 'Error sending SMS to %smsnum: %smsmsg', array( '%smsnum' => $thesmsnumber, '%smsmsg' => $themessage ));
      }
    }
    unset($form_state['storage']); # send user back to the start
    watchdog('smsblast', 'Finished SMS Blast to %smsnodeqname', array( '%smsnodeqname' =>  $view->name, '%smsmsg' => $form_state['storage']['smsform_values']['smsblast_message'] ));
    drupal_set_message(t('Finished SMS Blast to %smsnodeqname', array( '%smsnodeqname' =>  $view->name)), 'warning'); 
    return true;
  } 
}

function smsblast_validate_phone($phone_raw) {
  $phone = 0;
  # phone numbers missing the 1 prefix
  if (preg_match('/^1\d{10}$/', $phone_raw, $matches)) {
    $phone = '1'.$matches[0];
  # phone numbers with the 1 prefix
  } else if (preg_match('/^\d{10}$/', $phone_raw, $matches)) {
    $phone = $matches[0];
  }
  return $phone;
}


