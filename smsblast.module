<?php

#

/**
 * Implementation of hook_menu().
 */
function at_rally_auth_perm() {
    return array('use SMS Blast');
}

/**
 * Implementation of hook_menu().
 */
function smsblast_menu() {
  $items = array();
  $items['admin/smsframework/smsblast'] = array(
    'title' => 'SMS Blast',
    'description' => 'Sent bulk SMS Blasts to a view containing nodes with a SMS number in a CCK field.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('smsblast_sendform'),
    'access arguments' => array('use SMS Blast'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}


/**
 * Module settings form. */

/**
function smsblast_admin_settings() { 
  $form = array();
  return system_settings_form($form);
}

*/



/**
 * Display a list of installed modules with the option to reinstall them.
 */
function smsblast_sendform($form_state) {
  $output = '';

  $all_views = views_get_all_views(); 
  $views = array();
  foreach ($all_views as $view) {
      $views[ $view->name ] = $view->name;
  }

  $cck_fields = array_keys(content_fields());

  $form['smsblast_view'] = array(
    '#type' => 'select',
    '#title' => t('Select a View'),
    '#description' => t('SMS Blast will go to all nodes in this View.'),
    '#options' => $views,
  ); 
  $form['smsblast_cckfield'] = array(
    '#type' => 'select',
    '#title' => t('Select a CCK field'),
    '#description' => t('Pick the CCK field that contains the SMS number you want to send to.  CAUTION: this field should exist for all nodes in your View!'),
    '#options' => array_combine($cck_fields,$cck_fields),
  ); 
  $form['smsblast_message'] = array(
    '#type' => 'textfield',
    '#title' => t('SMS message'),
    '#default_value' => t('Put your message here'),
    '#description' => t('This message will be sent in the SMS Blast.'),
  ); 
  $form['list'] = array(
    '#type' => 'checkboxes',
    '#options' => $options,
    '#description' => t('Uninstall and then install the selected modules. <code>hook_uninstall()</code> and <code>hook_install()</code> will be executed and the schema version number will be set to the most recent update number. You may have to manually clear out any existing tables first if the module doesn\'t implement <code>hook_uninstall()</code>.'),
  );
  $form['submit'] = array(
    '#value' => t('Send SMS Blast'),
    '#type' => 'submit',
  );
  if (empty($form_state['post'])) {
    drupal_set_message(t('Warning - SMS spam is illegal.  Please ensure that your message complies with <a href="http://www.mmaglobal.com/bestpractices.pdf">MMA Best Practices</a>.'), 'warning'); # XXX fix to use l()
  }
  return $form;
}




/**
 * Process reinstall menu form submissions.
 */
function smsblast_sendform_submit($form, &$form_state) {

  $cckfieldname = 'node_data_'.$form_state['values']['smsblast_cckfield'].'_'.$form_state['values']['smsblast_cckfield'].'_value';

  $themessage = $form_state['values']['smsblast_message'] ;
  $view = views_get_view($form_state['values']['smsblast_view']);
  $view->execute();
  
  watchdog('smsblast', 'Sending SMS Blast to %smsviewname: %smsmsg', array( '%smsviewname' =>  $view->name, '%smsmsg' => $themessage ));
  foreach ($view->result as $thenode) {
    $thesmsnumber = $thenode->$cckfieldname;

    # validate and format the SMS number
    $thesmsnumber = smsblast_validate_phone($thesmsnumber);

    # actually send the SMS
    $options = array();
    sms_send($thesmsnumber, $themessage, $options);
    watchdog('smsblast', 'Sent SMS to %smsnum: %smsmsg', array( '%smsnum' => $thesmsnumber, '%smsmsg' => $themessage ));
  }
  watchdog('smsblast', 'Finished SMS Blast to %smsnodeqname', array( '%smsnodeqname' =>  $view->name, '%smsmsg' => $form_state['values']['smsblast_message'] ));
 drupal_set_message(t('Finished SMS Blast to %smsnodeqname', array( '%smsnodeqname' =>  $view->name)), 'warning'); 
}

function smsblast_validate_phone($phone) {
  # XXX finish this!
  $phone = '1'.$phone;
  return $phone;
}


